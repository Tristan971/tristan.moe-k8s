apiVersion: apps/v1
kind: Deployment
metadata:
  name: kmdah
  namespace: kmdah
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kmdah
  template:
    metadata:
      labels:
        app: kmdah
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/__mon/prometheus"
        prometheus.io/port: "8080"
        vault.hashicorp.com/role: 'kmdah'
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-secret-application-prod.yml: 'kv/mangadex/kmdah'
        vault.hashicorp.com/agent-inject-template-application-prod.yml: |
          {{- with secret "kv/mangadex/kmdah" -}}
          # avoid creating and destroying threads all the time
          # and use a constant pool
          server.jetty.threads:
            min: 100
            max: 200

          kmdah:
            cache:
              backend: filesystem
              max-size-gb: 3000
              filesystem:
                root-dir: "/cache"

            geoip:
              enabled: true
              license-key: "{{ .Data.data.maxmind_license_key }}"

            gossip:
              id-generation-strategy: hostname
              redis:
                host: redis-master
                port: 6379

            tls:
              backend: k8s
              k8s:
                secret:
                  auto-update: true
                  namespace: kmdah
                  name: mangadex-at-home-tls-secret

            mangadex:
              client-secret: "{{ .Data.data.mangadex_client_secret }}"
              load-balancer-ip: "124.6.37.144"
              bandwidth-mbps: 4000
              enforce-tokens: true
          {{- end }}
    spec:
      serviceAccountName: kmdah
      containers:
        - image: docker.tristan.moe/tristandeloche/kmdah:0.5.4
          imagePullPolicy: Always
          name: kmdah
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: KMDAH_CONFIGURATION
              value: "/vault/secrets/application-prod.yml"
            - name: JAVA_TOOL_OPTIONS
              value: "-Xms1G -Xmx1G -Xss512K -XX:+UseShenandoahGC"
          volumeMounts:
            - name: cephfs
              mountPath: /cache
          readinessProbe:
            httpGet:
              path: /__mon/health
              port: http
            periodSeconds: 5
            timeoutSeconds: 10
            initialDelaySeconds: 5
            successThreshold: 1
            failureThreshold: 1
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
              memory: 2Gi
          lifecycle:
            preStop:
              exec:
                command: [ "sleep", "10" ] # give 10s to traefik to remove the pod from all nodes' Endpoints
      terminationGracePeriodSeconds: 360
      topologySpreadConstraints:
        # try to not group on the same physical hosts
        - maxSkew: 1
          topologyKey: phys_host
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - kmdah
        # ensure not grouping on the same virtual host
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - kmdah
      volumes:
        - name: cephfs
          cephfs:
            user: admin
            secretRef:
              name: ceph-secret
            monitors:
              - 192.168.0.1:6789
              - 192.168.0.2:6789
              - 192.168.0.3:6789
            path: /volumes/kmdah
            readOnly: false
