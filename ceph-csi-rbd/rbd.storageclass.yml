apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  namespace: ceph-csi-rbd
  name: csi-rbd-sc
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: rbd.csi.ceph.com
parameters:
  # (required) String representing a Ceph cluster to provision storage from.
  # Should be unique across all Ceph clusters in use for provisioning,
  # cannot be greater than 36 bytes in length, and should remain immutable for
  # the lifetime of the StorageClass in use.
  # Ensure to create an entry in the configmap named ceph-csi-config, based on
  # csi-config-map-sample.yaml, to accompany the string chosen to
  # represent the Ceph cluster in clusterID below
  clusterID: "a686267d-b96d-4d88-be2a-dcfe6e475bab"

  # (required) Ceph pool into which the RBD image shall be created
  # eg: pool: rbdpool
  pool: rbd

  # Set thickProvision to true if you want RBD images to be fully allocated on
  # creation (thin provisioning is the default).
  thickProvision: "false"

  # (required) RBD image features, CSI creates image with image-format 2
  # CSI RBD currently supports only `layering` feature.
  imageFeatures: layering

  # The secrets have to contain Ceph credentials with required access
  # to the 'pool'.
  csi.storage.k8s.io/provisioner-secret-namespace: ceph-csi-rbd
  csi.storage.k8s.io/provisioner-secret-name: ceph-secret
  csi.storage.k8s.io/controller-expand-secret-namespace: ceph-csi-rbd
  csi.storage.k8s.io/controller-expand-secret-name: ceph-secret
  csi.storage.k8s.io/node-stage-secret-namespace: ceph-csi-rbd
  csi.storage.k8s.io/node-stage-secret-name: ceph-secret

  # (optional) Specify the filesystem type of the volume. If not specified,
  # csi-provisioner will set default as `ext4`.
  csi.storage.k8s.io/fstype: ext4

reclaimPolicy: Delete
allowVolumeExpansion: true
mountOptions:
  - discard
