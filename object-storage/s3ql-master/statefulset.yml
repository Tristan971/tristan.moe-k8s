apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: s3ql-master-statefulset
  namespace: object-storage
spec:
  selector:
    matchLabels:
      app: s3ql-master
  serviceName: s3ql-master
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: s3ql-master
      annotations:
        vault.hashicorp.com/role: 's3ql-master'
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-secret-scaleway-credentials: 'kv/scaleway/s3ql-master/authinfo'
        vault.hashicorp.com/agent-inject-template-scaleway-credentials: |
          {{- with secret "kv/scaleway/s3ql-master/authinfo" -}}
          [s3c]
          storage-url: {{ .Data.data.SCW_STORAGE_URL }}
          backend-login: {{ .Data.data.SCW_ACCESS_KEY_ID }}
          backend-password: {{ .Data.data.SCW_SECRET_ACCESS_KEY }}
          {{- end }}
    spec:
      serviceAccountName: s3ql-master
      terminationGracePeriodSeconds: 60
      containers:
        - name: s3ql-master
          imagePullPolicy: Always
          image: tristandeloche/s3ql-docker:master
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN
          lifecycle:
            postStart:
              exec:
                command: [
                  'bash',
                  '-c',
                  's3qlw_init -a /vault/secrets/scaleway-credentials -d /s3-data/data -l .exports-ready'
                ]
            preStop:
              exec:
                command: [
                  'bash',
                  '-c',
                  's3qlw_terminate -d /s3-data/data -l .exports-ready'
                ]
          volumeMounts:
            - name: devfuse
              mountPath: /dev/fuse
            - name: s3ql-master-cache
              mountPath: /buffer
            - name: s3-data
              mountPath: /s3-data:shared
        - name: nfs-server
          image: tristandeloche/nfs-server:awaiting-for-exports-readiness
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN
                - SYS_MODULE
          ports:
            - containerPort: 2049
          volumeMounts:
            # /path/to/share:/nfs
            - mountPath: /nfs:shared
              name: s3-data
              subPath: data
            # /lib/modules:/lib/modules:ro
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
          env:
            - name: 'NFS_EXPORT_0'
              value: '/nfs *(rw,fsid=0,sync)'
      volumes:
        # fuse device to use for mounting the s3ql filesystem
        - name: devfuse
          hostPath:
            path: /dev/fuse
        # shared volume to which the NFS server writes (due to other nodes using the NFS server)
        - name: s3-data
          hostPath:
            path: /mnt/s3-data
        # kernel modules for automatic modprobe by nfs server on need
        - name: lib-modules
          hostPath:
            path: /lib/modules
  volumeClaimTemplates:
    - metadata:
        name: s3ql-master-cache
      spec:
        accessModes: [ ReadWriteOnce ]
        resources:
          requests:
            storage: 30Gi
